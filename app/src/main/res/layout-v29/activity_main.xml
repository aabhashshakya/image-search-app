<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:forceDarkAllowed="true"
    tools:context=".VIEW.MainActivity">


    <!-- The Navigation component is designed for apps that have one main activity with multiple fragment destinations. The main activity
    is associated with a navigation graph and contains a NavHostFragment that is responsible for swapping destinations as needed. In an app
     with multiple activity destinations, each activity has its own navigation graph. -->

    <!-- We use fragment container view as it is so much better and is needed for Navigation component to work
     This is the navigation host. It is an empty container where destinations(fragments) are swapped in and out as a user navigates
     through your app.
     A navigation host must derive from NavHost. Hence we put that class in android:name attribute
     1.The android:name attribute contains the class name of your NavHost implementation.
     2.The app:navGraph attribute associates the NavHostFragment with a navigation graph. The navigation graph specifies all of the
     destinations in this NavHostFragment to which users can navigate.
     3.The app:defaultNavHost="true" attribute ensures that your NavHostFragment intercepts the system Back button. Note that only one
     NavHost can be the default. If you have multiple hosts in the same layout (two-pane layouts, for example), be sure to specify only one
     default NavHost.
     -->

    <!--SHORTCUT: GOTO DESIGN VIEW and Under Containers  -> NavHostFragment  ..TADAAAA!!!!! IDE does all this for you -->

    <androidx.fragment.app.FragmentContainerView
        android:id="@+id/fragment_container_nav_host"
        android:name="androidx.navigation.fragment.NavHostFragment"

        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:defaultNavHost="true"
        app:navGraph="@navigation/nav_graph">

    </androidx.fragment.app.FragmentContainerView>


</RelativeLayout>